@page "/"
@page "/search/{searchText}"
@page "/{categoryUrl}"

@using Klavelvet.Client.Services.ProductService;
@using Klavelvet.Shared.RequestFeatures;
@inject IProductService ProductService

<PageTitle>Klavelvet</PageTitle>

@if (string.IsNullOrEmpty(SearchText) && string.IsNullOrEmpty(CategoryUrl))
{
    <FeaturedProducts />
}
else
{
    <ProductList />
}



@code {
    [Parameter]
    public string? CategoryUrl { get; set; } = string.Empty;

    [Parameter]
    public string? SearchText { get; set; } = string.Empty;

    private ProductParameters _productParameters = new ProductParameters();

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrEmpty(SearchText))
        {
            await ProductService.SearchProducts(_productParameters,SearchText);
        }
        else
        {
            await ProductService.GetProducts(_productParameters,CategoryUrl);
        }

    }
}
